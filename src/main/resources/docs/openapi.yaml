openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/cards/block-requests/{id}/reject:
    put:
      tags:
      - card-controller
      operationId: reject
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponse"
  /api/cards/block-requests/{id}/approve:
    put:
      tags:
      - card-controller
      operationId: approve
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponse"
  /auth/register:
    post:
      tags:
      - auth-controller
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /auth/refresh:
    post:
      tags:
      - auth-controller
      operationId: refresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /auth/logout:
    post:
      tags:
      - auth-controller
      operationId: logout
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /auth/login:
    post:
      tags:
      - auth-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/transfers:
    post:
      tags:
      - transfer-controller
      operationId: transfer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransferRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/cards/topup:
    post:
      tags:
      - card-controller
      operationId: topUp
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TopUpRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/cards/request-block:
    post:
      tags:
      - card-controller
      operationId: requestBlock
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CardGetRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponse"
  /api/cards/create:
    post:
      tags:
      - card-controller
      operationId: createCard
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CardCreateRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CardDto"
  /api/admin/users/create:
    post:
      tags:
      - admin-user-controller
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/cards:
    get:
      tags:
      - card-controller
      operationId: myCards
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageCardDto"
  /api/cards/search:
    get:
      tags:
      - card-controller
      operationId: search
      parameters:
      - name: query
        in: query
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageCardDto"
  /api/cards/balance:
    get:
      tags:
      - card-controller
      operationId: balance
      parameters:
      - name: req
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/CardGetRequest"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BalanceResponse"
  /api/cards/all:
    get:
      tags:
      - card-controller
      operationId: allCards
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageCardDto"
  /api/admin/users:
    get:
      tags:
      - admin-user-controller
      operationId: all
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageUserDto"
  /api/cards/delete:
    delete:
      tags:
      - card-controller
      operationId: deleteCard
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CardGetRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponse"
  /api/admin/users/{id}:
    delete:
      tags:
      - admin-user-controller
      operationId: delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
components:
  schemas:
    ApiResponse:
      type: object
      properties:
        message:
          type: string
    RegisterRequest:
      required:
      - password
      - role
      - username
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        role:
          type: string
    RefreshRequest:
      type: object
      properties:
        refreshToken:
          type: string
    AuthResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    LoginRequest:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    TransferRequest:
      required:
      - amount
      - fromCardNumber
      - toCardNumber
      type: object
      properties:
        fromCardNumber:
          type: string
        toCardNumber:
          type: string
        amount:
          minimum: 0.01
          exclusiveMinimum: false
          type: number
    TopUpRequest:
      required:
      - amount
      - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
        amount:
          minimum: 0.01
          exclusiveMinimum: false
          type: number
    CardGetRequest:
      required:
      - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
    CardCreateRequest:
      required:
      - cardNumber
      - expiry
      type: object
      properties:
        cardNumber:
          type: string
        expiry:
          type: string
          format: date
        userId:
          type: integer
          format: int64
    CardDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        maskedNumber:
          type: string
        ownerName:
          type: string
        expiry:
          type: string
          format: date
        status:
          type: string
        balance:
          type: number
    PageCardDto:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: "#/components/schemas/CardDto"
        number:
          type: integer
          format: int32
        sort:
          $ref: "#/components/schemas/SortObject"
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: "#/components/schemas/PageableObject"
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: "#/components/schemas/SortObject"
        unpaged:
          type: boolean
        paged:
          type: boolean
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
    SortObject:
      type: object
      properties:
        empty:
          type: boolean
        unsorted:
          type: boolean
        sorted:
          type: boolean
    BalanceResponse:
      type: object
      properties:
        cardNumber:
          type: string
        balance:
          type: integer
          format: int64
    PageUserDto:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: "#/components/schemas/UserDto"
        number:
          type: integer
          format: int32
        sort:
          $ref: "#/components/schemas/SortObject"
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: "#/components/schemas/PageableObject"
        empty:
          type: boolean
    UserDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        role:
          type: string
          enum:
          - ROLE_USER
          - ROLE_ADMIN
